<?xml version="1.0" encoding="utf-8" ?>
<mopups:PopupPage 
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    x:Class="HotStuff.View.ModifyItemPopup"
    xmlns:input="clr-namespace:InputKit.Shared.Controls;assembly=InputKit.Maui"
    xmlns:local="clr-namespace:HotStuff"
    xmlns:material="clr-namespace:UraniumUI.Material.Controls;assembly=UraniumUI.Material"
    xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:models="clr-namespace:HotStuff.Model"
    xmlns:mopups="clr-namespace:Mopups.Pages;assembly=Mopups"
    xmlns:validation="clr-namespace:InputKit.Shared.Validations;assembly=InputKit.Maui"
    xmlns:viewmodel="clr-namespace:HotStuff.ViewModel"
    BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}"
    x:DataType="viewmodel:ItemsPageViewModel"
>

    <ScrollView Orientation="Vertical" VerticalScrollBarVisibility="Always">
        <input:FormView SubmitCommand="{Binding ModifyItemCommand}">
            <VerticalStackLayout Spacing="10" Padding="25,30" HorizontalOptions="Center" MinimumWidthRequest="400">
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Text="Modify Item" FontSize="Large" FontAttributes="Bold" Grid.Column="0" HorizontalOptions="Start" 
                           TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}"
                    />
                    <ImageButton Clicked="OnClosePopup" Grid.Column="1" HorizontalOptions="End">
                        <ImageButton.Source>
                            <FontImageSource FontFamily="FontAwesome" Glyph="{x:Static local:IconFont.CircleXmark}" Color="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}"/>
                        </ImageButton.Source>
                    </ImageButton>
                </Grid>
                
                <material:TextField 
                    Title="Item Name (Required)"
                    Text="{Binding SelectedItems[0].ItemName}"
                    TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}"
                    AccentColor="{StaticResource Primary}"
                    Icon="{FontImageSource FontFamily=FontAwesome, Glyph={x:Static local:IconFont.Pen}}"
                >
                    <material:TextField.Validations>
                        <validation:RequiredValidation />
                    </material:TextField.Validations>
                </material:TextField>

                <material:PickerField
                    Title="Item Category (Required)"
                    ItemsSource="{x:Static models:Item.AvailableCategories}"
                    SelectedItem="{Binding SelectedItems[0].Category}"
                    TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}"
                    AllowClear="True"
                    AccentColor="{StaticResource Primary}"
                    Icon="{FontImageSource FontFamily=FontAwesome, Glyph={x:Static local:IconFont.CircleChevronDown}}"
                >
                    <material:PickerField.Validations>
                        <validation:RequiredValidation />
                    </material:PickerField.Validations>
                </material:PickerField>

                <material:PickerField 
                    Title="Item Room (Required)"
                    ItemsSource="{x:Static models:Item.AvailableRooms}"
                    SelectedItem="{Binding SelectedItems[0].Room}"
                    TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}"
                    AllowClear="True"
                    AccentColor="{StaticResource Primary}"
                    Icon="{FontImageSource FontFamily=FontAwesome, Glyph={x:Static local:IconFont.CircleChevronDown}}"
                >
                    <material:PickerField.Validations>
                        <validation:RequiredValidation />
                    </material:PickerField.Validations>
                </material:PickerField>

                <material:TextField 
                    Title="Brand / Manufacturer Name (Optional)"
                    Text="{Binding SelectedItems[0].BrandManufacturer}"
                    TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}"
                    AllowClear="True"
                    AccentColor="{StaticResource Primary}"
                    Icon="{FontImageSource FontFamily=FontAwesome, Glyph={x:Static local:IconFont.Pen}}"
                />

                <material:PickerField 
                    Title="Item Color (Optional)"
                    ItemsSource="{x:Static models:Item.AvailableColors}"
                    TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}"
                    SelectedItem="{Binding SelectedItems[0].Color}"
                    AllowClear="True"
                    AccentColor="{StaticResource Primary}"
                    Icon="{FontImageSource FontFamily=FontAwesome, Glyph={x:Static local:IconFont.CircleChevronDown}}"
                />

                <material:TextField 
                    Title="Item Quantity (Required)"
                    Text="{Binding SelectedItems[0].ItemQuantity}"
                    TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}"
                    AllowClear="True"
                    AccentColor="{StaticResource Primary}"
                    Icon="{FontImageSource FontFamily=FontAwesome, Glyph={x:Static local:IconFont.Hashtag}}"
                >
                    <material:TextField.Validations>
                        <validation:RequiredValidation/>
                        <validation:DigitsOnlyValidation />
                        <validation:MinValueValidation MinValue="1" />
                    </material:TextField.Validations>
                </material:TextField>

                <material:TextField 
                    x:Name="AmountPaidEntry"
                    Title="Item Price (Optional)"
                    Text="{Binding SelectedItems[0].ItemPrice}"
                    TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}"
                    AllowClear="True"
                    AccentColor="{StaticResource Primary}"
                    Icon="{FontImageSource FontFamily=FontAwesome, Glyph={x:Static local:IconFont.DollarSign}}"
                >
                    <material:TextField.Validations>
                        <validation:NumericValidation />
                    </material:TextField.Validations>
                </material:TextField>

                <material:DatePickerField
                    Title="Date Acquired (Optional)"
                    AllowClear="True"
                    AccentColor="{StaticResource Primary}"
                    Date="{Binding SelectedItems[0].DateAcquired}"
                    Icon="{FontImageSource FontFamily=FontAwesome, Glyph={x:Static local:IconFont.CalendarDays}}"
                />

                <material:TextField 
                    Title="Item Description (Optional)"
                    Text="{Binding SelectedItems[0].ItemDescription}"
                    TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}"
                    AllowClear="True"
                    AccentColor="{StaticResource Primary}"
                    Icon="{FontImageSource FontFamily=FontAwesome, Glyph={x:Static local:IconFont.Pen}}"
                />

                <material:TextField 
                    x:Name="PurchaseProof"
                    Title="Purchase Proof (Optional)"
                    Text="{Binding SelectedItems[0].PurchaseProof}"
                    TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}"
                    AllowClear="True"
                    AccentColor="{StaticResource Primary}"
                    Icon="{FontImageSource FontFamily=FontAwesome, Glyph={x:Static local:IconFont.Camera}}"
                >
                    <material:TextField.Attachments>
                        <!-- <Button Text="Take Photo" Clicked="OnTakePhotoClicked"/> -->
                        <Button 
                            Text="Select Photo"
                            TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}"
                            BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}"
                            Margin="5"
                            StyleClass="FilledButton" 
                            Clicked="OnPickPhotoClicked"
                        />
                    </material:TextField.Attachments>
                </material:TextField>

                <Button
                    Command="{Binding ModifyItemCommand}"
                    Text="Update Item"
                    FontSize="Small"
                    TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}"
                    BackgroundColor="{StaticResource Primary}"
                    input:FormView.IsSubmitButton="True"
                />
            </VerticalStackLayout>
        </input:FormView>
    </ScrollView>
</mopups:PopupPage>