<?xml version="1.0" encoding="UTF-8" ?>
<uranium:UraniumContentPage 
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:uranium="clr-namespace:UraniumUI.Pages;assembly=UraniumUI"
    xmlns:attachment="clr-namespace:UraniumUI.Material.Attachments;assembly=UraniumUI.Material"
    xmlns:material="clr-namespace:UraniumUI.Material.Controls;assembly=UraniumUI.Material"
    xmlns:input="clr-namespace:InputKit.Shared.Controls;assembly=InputKit.Maui"
    x:Class="HotStuff.View.ItemsPage"
    xmlns:local="clr-namespace:HotStuff"
    xmlns:models="clr-namespace:HotStuff.Model"
    xmlns:viewmodel="clr-namespace:HotStuff.ViewModel"
    x:DataType="viewmodel:ItemsPageViewModel"
    xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    Title="Items"
>

    <uranium:UraniumContentPage.ToolbarItems>
        <ToolbarItem 
            IconImageSource="{AppThemeBinding Light={StaticResource SearchIcon}, 
            Dark={StaticResource SearchIconDark}}" 
            Clicked="OnProfilePageClicked" SemanticProperties.Description="Search" 
            SemanticProperties.Hint="Opens the search submenu."
        />
        <ToolbarItem 
            IconImageSource="{AppThemeBinding Light={StaticResource FilterIcon}, 
            Dark={StaticResource FilterIconDark}}" 
            Clicked="OnProfilePageClicked" SemanticProperties.Description="Filter" 
            SemanticProperties.Hint="Opens the filter submenu."
        />
        <ToolbarItem 
            IconImageSource="{AppThemeBinding Light={StaticResource ProfileIcon}, 
            Dark={StaticResource ProfileIconDark}}" 
            Clicked="OnProfilePageClicked" SemanticProperties.Description="Profile" 
            SemanticProperties.Hint="Opens the profile page."
        />
    </uranium:UraniumContentPage.ToolbarItems>



    <RefreshView IsRefreshing="{Binding IsRefreshing}" Command="{Binding GetItemsCommand}" RefreshColor="{StaticResource Primary}">
        <Grid HorizontalOptions="FillAndExpand">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="80" />
                <RowDefinition Height="40" />
                <RowDefinition Height="80" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <StackLayout Grid.Column="0" Grid.Row="1">
                <ImageButton Command="{Binding OpenAddItemPopupCommand}" SemanticProperties.Description="Add item" SemanticProperties.Hint="Opens the add item page.">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="FontAwesome" Glyph="{x:Static local:IconFont.CirclePlus}" Color="{StaticResource Primary}"/>
                    </ImageButton.Source>
                </ImageButton>
                <Label Text="Add" FontSize="Small" FontAttributes="Bold" TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}" 
                    FontFamily="OpenSansRegular" HorizontalTextAlignment="Center" VerticalTextAlignment="End" Margin="0,5,0,0"
                />
            </StackLayout>

            <StackLayout Grid.Column="1" Grid.Row="1">
                <ImageButton Command="{Binding OpenModifyItemPopupCommand}"  SemanticProperties.Description="Modify" SemanticProperties.Hint="Modifies an existing item's characteristics.">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="FontAwesome" Glyph="{x:Static local:IconFont.ArrowsRotate}" Color="{StaticResource Primary}"/>
                    </ImageButton.Source>
                </ImageButton>
                <Label Text="Modify" FontSize="Small" FontAttributes="Bold" 
                    TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}" 
                    FontFamily="OpenSansRegular" HorizontalTextAlignment="Center" VerticalTextAlignment="End" Margin="0,5,0,0"
                />
            </StackLayout>

            <StackLayout Grid.Column="2" Grid.Row="1">
                <ImageButton Command="{Binding OpenDeletePopupCommand}">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="FontAwesome" Glyph="{x:Static local:IconFont.CircleXmark}" Color="{StaticResource Primary}"/>
                    </ImageButton.Source>
                </ImageButton>
                <Label Text="Delete" FontSize="Small" FontAttributes="Bold" TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}" 
                    FontFamily="OpenSansRegular" HorizontalTextAlignment="Center" VerticalTextAlignment="End" Margin="0,5,0,0"
                />
            </StackLayout>

            <StackLayout Grid.Column="0" Grid.Row="3">
                <ImageButton Command="{Binding OpenCopyItemPopupCommand}"  SemanticProperties.Description="Copy" SemanticProperties.Hint="Creates copies of the selected items.">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="FontAwesome" Glyph="{x:Static local:IconFont.Copy}" Color="{StaticResource Primary}"/>
                    </ImageButton.Source>
                </ImageButton>
                <Label Text="Copy" FontSize="Small" FontAttributes="Bold" TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}" 
                    FontFamily="OpenSansRegular" HorizontalTextAlignment="Center" VerticalTextAlignment="End" Margin="0,5,0,0"
                />
            </StackLayout>

            <StackLayout Grid.Column="1" Grid.Row="3">
                <ImageButton SemanticProperties.Description="Transfer" SemanticProperties.Hint="Transfers items between buildings.">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="FontAwesome" Glyph="{x:Static local:IconFont.ArrowRightArrowLeft}" Color="{StaticResource Primary}"/>
                    </ImageButton.Source>
                </ImageButton>
                <Label Text="Transfer" FontSize="Small" FontAttributes="Bold" TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}" 
                    FontFamily="OpenSansRegular" HorizontalTextAlignment="Center" VerticalTextAlignment="End" Margin="0,5,0,0"
                />
            </StackLayout>

            <StackLayout Grid.Column="2" Grid.Row="3">
                <ImageButton Command="{Binding OpenExportItemsPopupCommand}" SemanticProperties.Description="Download" SemanticProperties.Hint="Opens the download menu.">
                    <ImageButton.Source>
                        <FontImageSource FontFamily="FontAwesome" Glyph="{x:Static local:IconFont.Download}" Color="{StaticResource Primary}"/>
                    </ImageButton.Source>
                </ImageButton>
                <Label Text="Download" FontSize="Small" FontAttributes="Bold" TextColor="{AppThemeBinding Light={StaticResource BlackText}, Dark={StaticResource WhiteText}}" 
                    FontFamily="OpenSansRegular" HorizontalTextAlignment="Center" VerticalTextAlignment="End" Margin="0,5,0,0"
                />
            </StackLayout>

            <ScrollView Orientation="Both" HorizontalScrollBarVisibility="Always" VerticalScrollBarVisibility="Always" Grid.Row="4" Grid.ColumnSpan="3">

                <material:DataGrid 
                    ItemsSource="{Binding ItemManifest}" SelectedItems="{Binding SelectedItems}" SelectionColor="{StaticResource Primary}"
                    HorizontalOptions="Center" VerticalOptions="StartAndExpand" x:Name="UraniumGrid"
                    BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}"
                >
                    <material:DataGrid.EmptyView>
                        <StackLayout Padding="100">
                            <Image HorizontalOptions="Center" VerticalOptions="Center" Source="{AppThemeBinding Light='noitemdata.png', Dark='noitemdatadark.png'}" HeightRequest="160" WidthRequest="160" />
                            <Label Text="No items found" HorizontalOptions="Center" VerticalOptions="Center" Padding="10"/>
                        </StackLayout>
                    </material:DataGrid.EmptyView>

                    <material:DataGrid.Columns>
                        <material:DataGridSelectionColumn/>
                        <material:DataGridColumn Binding="{Binding ItemName}" Title="Name" Width="Auto" />
                        <material:DataGridColumn Binding="{Binding Category}" Title="Category" Width="Auto"/>
                        <material:DataGridColumn Binding="{Binding BrandManufacturer}" Title="Brand / Manufacturer" Width="Auto"/>
                        <material:DataGridColumn Binding="{Binding Room}" Title="Room" Width="Auto"/>
                        <material:DataGridColumn Binding="{Binding Color}" Title="Color" Width="Auto"/>
                        <material:DataGridColumn Binding="{Binding DateAcquired}" Title = "Date Acquired" Width="Auto"/>
                        <material:DataGridColumn Binding="{Binding ItemPrice}" Title = "Price" Width="Auto"/>
                        <material:DataGridColumn Binding="{Binding ItemQuantity}" Title = "Quantity" Width="Auto" />
                        <material:DataGridColumn Binding="{Binding ItemDescription}" Title="Description" Width="Auto"/>
                        <material:DataGridColumn Binding="{Binding PurchaseProof}" Title="Purchase Proof" Width="Auto"/>
                    </material:DataGrid.Columns>
                </material:DataGrid>
            </ScrollView>

        </Grid>
    </RefreshView>

</uranium:UraniumContentPage>